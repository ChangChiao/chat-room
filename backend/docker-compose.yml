version: '3.8'

services:
  # PostgreSQL 資料庫服務
  postgres:
    image: postgres:15-alpine
    container_name: chatroom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER:-chatroom_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-chatroom_password}
      POSTGRES_DB: ${DATABASE_NAME:-chatroom_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    networks:
      - chatroom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-chatroom_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 快取服務 (可選)
  redis:
    image: redis:7-alpine
    container_name: chatroom-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - chatroom-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS 應用服務
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatroom-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # 應用設定
      NODE_ENV: production
      PORT: ${PORT:-3000}
      
      # 資料庫設定
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER:-chatroom_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-chatroom_password}
      DATABASE_NAME: ${DATABASE_NAME:-chatroom_db}
      
      # Redis 設定
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT 設定
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME:-86400}
      
      # Google OAuth 設定
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL:-http://localhost:3000/auth/google/callback}
      
      # 前端 URL
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
    ports:
      - "${PORT:-3000}:3000"
    networks:
      - chatroom-network
    volumes:
      - ./public:/app/public
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  chatroom-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: